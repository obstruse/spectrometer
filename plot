#!/bin/bash


usage() {
  cat <<EOF

Usage: $(basename $0) [-H] [-I] [-L] [--CFL] [--CIS] [--INT] CSVfile

Plot Spectrum

Options:
    -H      Show this message
    -B      -B1 enable background image.  -B0 disable
    -L      -L1 enable landmarks display. -L0 disable
    --CFL   Plot pixel averages and CFL landmarks
    --CIS   Plot color averages and CIS landmarks
    --INT   Plot pixel averages as filled curve

    CSVfile Spectrum data to plot

EOF
}

CFLplot=0
CISplot=0
INTplot=0
INT2plot=0
plotSelected=0

landmarks=1
image=1
file=""

while [ $OPTIND -le "$#" ]; do
    if getopts "\-:b:B:l:L:hH" optchar; then
         case "${optchar}" in
           -)
               plotSelected=1
               case "${OPTARG}" in
                   CFL) CFLplot=1 ;;
                   CIS) CISplot=1 ;;
                   INT) INTplot=1 ;;
                   INT2) INT2plot=1 ;;
                   *) echo "Unknown option --${OPTARG}"
                      usage
                      exit 2 ;;
               esac;;
    
           h|H) usage ; exit 2 ;;
           l|L) landmarks=${OPTARG} ;;
           b|B) image=${OPTARG} ;;
           *) usage ; exit 2 ;;

         esac
    else
          file=("${!OPTIND}")
          ((OPTIND++))
    fi
done

if [[ $file == "" ]]; then
    echo "Missing CSVfile"
    usage
    exit 2
fi
if [[ $plotSelected == 0 ]]; then
    CFLplot=1
fi

IN="$file"
DIR=$(dirname $IN)
FILE=${IN##*/}
BASE="${DIR}/${FILE%.*}"

# CAL file generated by calibrate.py
# use the CAL file if there is one, otherwise the CSV file from average.py
CSV="${BASE}.cal"
if [[ ! -f $CSV ]]; then CSV="${BASE}.csv"; fi
if [[ ! -f $CSV ]]; then echo "CSV file not found: ${CSV}"; exit 3; fi

JPG="${BASE}.jpg"

C436=$(awk -F ',' '{print $3;exit}' $CSV)
C611=$(awk -F ',' '{print $4;exit}' $CSV)
SNAME=$(awk -F ',' '{print $5;exit}' $CSV)
SDESC=$(awk -F ',' '{print $6;exit}' $CSV)

export NO_AT_BRIDGE=1

gnuplot <<EOF

width = 1280                        # size of background image
height = 286
set term qt size width,height

set datafile separator ","

m = (611.0 - 436.0) / ($C611 - $C436)   # calibration multiplier
b = 611.0 - m * $C611                   # calibration offset

nmCol(nm) = (nm-b)/m
colNM(col) = col*m+b

set y2range [0:height-1]
set yrange [-30:255]
set x2range [nmCol(375):nmCol(695)]
set xrange [375:695]

set autoscale noextend
set border 0

set lmargin screen 0
set bmargin screen 0
set rmargin screen 1
set tmargin screen 1

unset ytics

set xtics nomirror
set mxtics  5

unset key

#set xzeroaxis ls 1                 # draw zero line (or not. Changes label position)

#-------------------------

if ($image) {
# mostly the lines will be white against a black image background
set object rectangle from screen 0,0 to screen 1,1 behind fillcolor rgb 'black' 
set style line 1 lw 1 lc rgb "white"
set style arrow 1 nohead front lc rgb "white" dashtype 2
set style textbox transparent border lc "white"
set grid xtics lc rgb "white" front # use set grid to get xtic marks white and in front
unset grid                          # ...unset grid to turn off the grid lines
set xtics axis in 50 tc "white"     # put the xtics on the zero axis and tic text white
set border ls 1                     # tic lines use the border color
} else {
# mostly black lines against a white background
set style line 1 lw 1 lc rgb "black"
set style arrow 1 nohead front lc rgb "black" dashtype 2
set style textbox transparent border lc "black"
set grid xtics lc rgb "black" front # use set grid to get xtic marks black and in front
unset grid                          # ...unset grid to turn off the grid lines
set xtics axis in 50 tc "black"     # put the xtics on the zero axis and tic text black
}

set label "$SDESC" at graph .99, graph .94 right tc ls 1 front boxed
set label "nm" at graph 0.98,character 1 tc ls 1 front

if ($CFLplot && $landmarks ) {
set arrow from 405,graph 0 to 405,720 as 1
set label "Hg405" at 405,character 3 tc ls 1 front
set arrow from 436,graph 0 to 436,720 as 1
set label "Hg436" at 436,character 3 tc ls 1 front
set arrow from 487,graph 0 to 487,720 as 1
set label "Tb487" at 487,character 3 tc ls 1 front
set arrow from 542,graph 0 to 542,720 as 1
set arrow from 546,graph 0 to 546,720 as 1
set label "Hg546" at 546,character 3 tc ls 1 front
set arrow from 611,graph 0 to 611,720 as 1
set label "Eu611" at 611,character 3 tc ls 1 front
}

if ($CISplot && $landmarks) {
set arrow from 474,graph 0 to 474,720 as 1
set label "474" at 474,character 3 tc ls 1 front
set arrow from 536,graph 0 to 536,720 as 1
set label "536" at 536,character 3 tc ls 1 front
set arrow from 595,graph 0 to 595,720 as 1
set label "595" at 595,character 3 tc ls 1 front
}

set style line 2 lc rgb "red"
set style line 3 lc rgb "green"
set style line 4 lc rgb "blue"

plot_command = "plot "

if ($image) {
plot_command = sprintf("%s%s,",plot_command,'"$JPG" binary filetype=jpg with rgbimage axes x2y2')
} 

if ($INTplot) {
set yrange [0:255]
unset grid
unset xtics
unset label
plot_command = sprintf("%s%s,",plot_command,'"$CSV" using (colNM(\$1)):2:(-12) skip 1 lc rgb "black" with filledcurves fs transparent solid 1.0 axes x1y1')
}
if ($INT2plot) {
set yrange [0:255]
unset grid
unset xtics
unset label
plot_command = sprintf("%s%s,",plot_command,'"$CSV" using (colNM(\$1)):5:(-12) skip 1 lc rgb "blue" with filledcurves fs transparent solid 0.2 axes x1y1')
plot_command = sprintf("%s%s,",plot_command,'"$CSV" using (colNM(\$1)):4:(-12) skip 1 lc rgb "green" with filledcurves fs transparent solid 0.2 axes x1y1')
plot_command = sprintf("%s%s,",plot_command,'"$CSV" using (colNM(\$1)):3:(-12) skip 1 lc rgb "red" with filledcurves fs transparent solid 0.2 axes x1y1')
}

if ($CFLplot) {
plot_command = sprintf("%s%s,",plot_command,'"$CSV" using (colNM(\$1)):2 skip 1 ls 1 title "$SNAME" with lines axes x1y1')
}
if ($CISplot) {
plot_command = sprintf("%s%s,",plot_command,'"$CSV" using (colNM(\$1)):3 skip 1 ls 2 with lines axes x1y1')
plot_command = sprintf("%s%s,",plot_command,'    "" using (colNM(\$1)):4 skip 1 ls 3 with lines axes x1y1')
plot_command = sprintf("%s%s,",plot_command,'    "" using (colNM(\$1)):5 skip 1 ls 4 with lines axes x1y1')
}


# create the plot
eval plot_command

pause mouse button2 "button2 to exit"

EOF
